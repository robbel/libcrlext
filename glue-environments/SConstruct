lib = Dir('lib')
build = Dir('build')
src = Dir('src')
inc = Dir('include')
bin = Dir('bin')

prefix = Dir(ARGUMENTS.get('prefix', '.'))
prefix_lib = prefix.Dir('lib')
prefix_inc = prefix.Dir('include')
prefix_bin = prefix.Dir('bin')


import os
cpath = os.environ.get('CPATH', "")
ld_library_path = os.environ.get('LD_LIBRARY_PATH', "")
cpp_paths = cpath.split(':')+[prefix_inc, inc]
lib_paths = ld_library_path.split(':')+[lib, prefix_lib]

ccflags = ['-Wall', '-Werror', '-ansi']
if 'debug' in COMMAND_LINE_TARGETS:
	ccflags += ['-g']

BuildDir(build, src, duplicate=0)

poupart_sources = [build.File('env_poupart.cpp')]
headers = []

env = Environment(tools = ["default", "tools"], toolpath = '.',
                  CPPPATH=cpp_paths, CCFLAGS=ccflags, LIBPATH=lib_paths)

shared_lib_suffix = ".so"
if os.uname()[0] == "Darwin":
	shared_lib_suffix = ".dylib"
	env.Append(SHLINKFLAGS='-undefined dynamic_lookup')
	
config = Configure(env)
has_crl = sum([
	config.CheckCXXHeader('cpputil.hpp'),
	config.CheckCXXHeader('boost/shared_ptr.hpp'),
	config.CheckLibWithHeader('crl', 'crl/crl.hpp', 'cpp'),
])
has_glue = sum([
	config.CheckHeader('rlglue/Agent_common.h'),
    config.CheckHeader('rlglue/utils/C/RLStruct_util.h'),
    config.CheckHeader('rlglue/utils/C/TaskSpec_Parser.h'),
    config.CheckLib('rlutils'),
    config.CheckLib('rlagent'),
    config.CheckLib('rlgluenetdev'),
    config.CheckLib('taskspecutils')
])
env = config.Finish()

lib_targets = []
bin_targets = []

if has_crl and has_glue:
	env_poupart = env.Program(bin.Entry('env_poupart'), poupart_sources,
	                       LIBS=['crl', 'rlgnmenv',
	                             'rlcrlenv', 'rlutils', 'rlgluenetdev',
	                             'taskspecutils'])
	bin_targets += [env_poupart]
else:
	print "Cannot build env_poupart"

if prefix != Dir('.'):
	for header in headers:
		env.Alias('install', env.InstallPerm(prefix_inc.Dir('crl'), inc.Entry(header), 0644))
	env.Alias('install', env.InstallPerm(prefix_lib, lib_targets, 0644))
	env.Alias('install', env.InstallPerm(prefix_bin, bin_targets, 0755))

for target in lib_targets+bin_targets:
	Default(target)
	env.Alias('debug', target)
	
dist_files = [File(x) for x in """
COPYING COPYING.LESSER SConstruct tools.py
""".split()]
dist_files += [inc.Entry(header) for header in headers]
dist_files += [src.Entry(s) for s in env_poupart] 

env.Alias('dist', env.DistTar('glue-environments.tar.gz', dist_files))
	
	
	